# Generated by Django 5.1.6 on 2025-05-27 18:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('exercise_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='Learning2Judge.category')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('program_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('equipage_id', models.CharField(max_length=100)),
                ('video_path', models.TextField(blank=True, null=True)),
                ('exercise_order', models.TextField(blank=True, null=True)),
                ('exercises', models.ManyToManyField(related_name='programs', to='Learning2Judge.exercise')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramScore',
            fields=[
                ('program_score_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.FloatField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Learning2Judge.exercise')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Learning2Judge.program')),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('user_session_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='Learning2Judge.program')),
            ],
        ),
        migrations.CreateModel(
            name='UserScore',
            fields=[
                ('user_score_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('exercise_name', models.CharField(blank=True, max_length=255, null=True)),
                ('expert_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_scores', to='Learning2Judge.programscore')),
                ('user_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_scores', to='Learning2Judge.usersession')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_judge', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('judge_level', models.CharField(blank=True, choices=[('DDA', 'DDA'), ('DD1', 'DD1'), ('DD2', 'DD2'), ('DD3', 'DD3'), ('DD4', 'DD4')], max_length=4)),
                ('judge_since', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='usersession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL),
        ),
    ]
